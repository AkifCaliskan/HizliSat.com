// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sahibinden.DataAccess.Concrete;

#nullable disable

namespace Sahibinden.DataAccess.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sahibinden.Entities.Concrete.Advert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Adverts", "dbo");
                });

            modelBuilder.Entity("Sahibinden.Entities.Concrete.AdvertDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryFeautureId")
                        .HasColumnType("int");

                    b.Property<int>("FeautureId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId");

                    b.HasIndex("FeautureId");

                    b.ToTable("AdvertDetails", "dbo");
                });

            modelBuilder.Entity("Sahibinden.Entities.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Vasıta",
                            Name = "Vasıta",
                            ParentId = 0,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            Description = "Emlak",
                            Name = "Emlak",
                            ParentId = 0,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            Description = "Otomobil",
                            Name = "Otomobil",
                            ParentId = 1,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 4,
                            Description = "Arazi, Suv & Pickup",
                            Name = "Arazi, Suv & Pickup",
                            ParentId = 1,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 5,
                            Description = "Motosiklet",
                            Name = "Motosiklet",
                            ParentId = 1,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 6,
                            Description = "Minivan & Panelvan",
                            Name = "Minivan & Panelvan",
                            ParentId = 1,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 7,
                            Description = "Ticari Araçlar",
                            Name = "Ticari Araçlar",
                            ParentId = 1,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 8,
                            Description = "Elektrikli Araçlar",
                            Name = "Elektrikli Araçlar",
                            ParentId = 1,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 9,
                            Description = "Kiralık Araçlar",
                            Name = "Kiralık Araçlar",
                            ParentId = 1,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 10,
                            Description = "Deniz Araçları",
                            Name = "Deniz Araçları",
                            ParentId = 1,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 11,
                            Description = "Hasarlı Araçlar",
                            Name = "Hasarlı Araçlar",
                            ParentId = 1,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 12,
                            Description = "Karavan",
                            Name = "Karavan",
                            ParentId = 1,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 13,
                            Description = "Klasik Araçlar",
                            Name = "Klasik Araçlar",
                            ParentId = 1,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 14,
                            Description = "Hava Araçları",
                            Name = "Hava Araçları",
                            ParentId = 1,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 15,
                            Description = "ATV",
                            Name = "ATV",
                            ParentId = 1,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 16,
                            Description = "UTV",
                            Name = "UTV",
                            ParentId = 1,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 17,
                            Description = "Konut",
                            Name = "Konut",
                            ParentId = 2,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 18,
                            Description = "İş Yeri",
                            Name = "İş Yeri",
                            ParentId = 2,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 19,
                            Description = "Arsa",
                            Name = "Arsa",
                            ParentId = 2,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 20,
                            Description = "Konut Projeleri",
                            Name = "Konut Projeleri",
                            ParentId = 2,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 21,
                            Description = "Bina",
                            Name = "Bina",
                            ParentId = 2,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 22,
                            Description = "Devre Mülk",
                            Name = "Devre Mülk",
                            ParentId = 2,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 23,
                            Description = "Turistik Tesis",
                            Name = "Turistik Tesis",
                            ParentId = 2,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 24,
                            Description = "Daire",
                            Name = "Daire",
                            ParentId = 17,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 25,
                            Description = "Rezidans",
                            Name = "Rezidans",
                            ParentId = 17,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 26,
                            Description = "Müstakil Ev",
                            Name = "Müstakil Ev",
                            ParentId = 17,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 27,
                            Description = "Villa",
                            Name = "Villa",
                            ParentId = 17,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 28,
                            Description = "Çiftlik Evi",
                            Name = "Çiftlik Evi",
                            ParentId = 17,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 29,
                            Description = "Köşk & Konak",
                            Name = "Köşk & Konak",
                            ParentId = 17,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 30,
                            Description = "Yalı",
                            Name = "Yalı",
                            ParentId = 17,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 31,
                            Description = "Yalı Dairesi",
                            Name = "Yalı Daires,",
                            ParentId = 17,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 32,
                            Description = "Yazlık",
                            Name = "Yazlık",
                            ParentId = 17,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 33,
                            Description = " Kooperatif",
                            Name = "Kooperatif",
                            ParentId = 17,
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        });
                });

            modelBuilder.Entity("Sahibinden.Entities.Concrete.CategoryFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryFeatures", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Key = "elevator",
                            Name = "Asansör",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Key = "numberOfFloor",
                            Name = "Bulunduğu Kat",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Key = "numberOfRoom",
                            Name = "Oda Sayısı",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Key = "m2",
                            Name = "M2",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Key = "buildingAge",
                            Name = "Bina Yaşı",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Key = "floor",
                            Name = "Bulunduğu Kat",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Key = "heating",
                            Name = "Isıtma",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            Key = "balcony",
                            Name = "Balkon",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            Key = "parking",
                            Name = "Otopark",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Key = "brand",
                            Name = "Marka",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            Key = "serial",
                            Name = "Seri",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            Key = "model",
                            Name = "Model",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            Key = "age",
                            Name = "Yıl",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 2,
                            Key = "gear",
                            Name = "Vites",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 2,
                            Key = "km",
                            Name = "KM",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 2,
                            Key = "caseType",
                            Name = "Kasa Tipi",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 2,
                            Key = "engineSize",
                            Name = "Motor Hacmi",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 2,
                            Key = "enginePower",
                            Name = "Motor Gücü",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 2,
                            Key = "traction",
                            Name = "Çekiş",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 2,
                            Key = "color",
                            Name = "Renk",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        });
                });

            modelBuilder.Entity("Sahibinden.Entities.Concrete.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertId")
                        .HasColumnType("int");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Images", "dbo");
                });

            modelBuilder.Entity("Sahibinden.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Users", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Ankara",
                            Email = "akifcaliskan@gmail.com",
                            FirstName = "Akif",
                            LastName = "Çalışkan",
                            Password = "1234",
                            Phone = "5555555555",
                            RecordDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            Type = (short)1
                        });
                });

            modelBuilder.Entity("Sahibinden.Entities.Concrete.Advert", b =>
                {
                    b.HasOne("Sahibinden.Entities.Concrete.Category", "Category")
                        .WithMany("Adverts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Sahibinden.Entities.Concrete.AdvertDetail", b =>
                {
                    b.HasOne("Sahibinden.Entities.Concrete.Advert", "Advert")
                        .WithMany("Details")
                        .HasForeignKey("AdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sahibinden.Entities.Concrete.CategoryFeature", "Feauture")
                        .WithMany()
                        .HasForeignKey("FeautureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advert");

                    b.Navigation("Feauture");
                });

            modelBuilder.Entity("Sahibinden.Entities.Concrete.CategoryFeature", b =>
                {
                    b.HasOne("Sahibinden.Entities.Concrete.Category", "Category")
                        .WithMany("Feature")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Sahibinden.Entities.Concrete.Advert", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("Sahibinden.Entities.Concrete.Category", b =>
                {
                    b.Navigation("Adverts");

                    b.Navigation("Feature");
                });
#pragma warning restore 612, 618
        }
    }
}
